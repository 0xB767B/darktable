0.5 release:
- clean build system (kernel like)
- crop/rotate angle == 0 bypass
- auto center/filter to 1 star/filename if new film is loaded
  - or: presets for every film in separate db.
- library management in develop mode?
- film strip in develop mode to switch to next image.
- plugin focus (doubleclick header?)
- mac bitch: gegl.h and Carbon.h are not friends.
- side by side comparison view
- gconf option for maximum number of jobs?
- tagging plugin in lighttable mode:
  - film.h: sql query string
  - small gui to view tags (next to metadata?)
  - small gui to organise tags (create, mod, delete)
  - small gui to query images by tags
- remove mipmap from db on new mipmap write?
- whitebalance presets
- quitting dialog/progress?
- histogram fill light mouse gesture
- exposure: highlight clipped parts
- exr import
- tonemapping widget?
- clipping event hooks: crop
- user preferences
  - default processing stack, if exif matches
- lighttable plugins:
  - copy style
- color picker for tonecurve/color correction/monochrome?
- progress bars for coresponding widgets (export)?
- efficiency:
  - dt_image_expose: check history cached in flags?
  - dt_dev_process_to_mip: check hash?
- image file operations: remove from db, delete from disk, write dt[tags], duplicate in db.
- scroll to opened expander in darkroom mode.

bugs:
- bug for clipped mip maps and low resolutions.
- develop left without mipf loaded => output_width messed up.
- open_raw has img cleaned up before finished during dt_exit
- zoom to wrong image bug: resize window helps (???)

cleanup:
- remove most iop/*.h 
- keep stdout clean! (shut up exiv2 and jpg)
- add some user guide documentation.
- progress bars for image folder import and image export
- print GPLv3 notice on top of all files

- copy function in lib:
  - flags, tags
  - histogram :)
- write/re-import small xml file for images to backup sql
- translations (de, etc)
- man page
- small 1:1 preview for sharpen etc.
- write back images to db after cache drop!
- quality parameter for pixelpipe init callbacks in modules?
- new strategy to add images: add empty dia (with icon and filename)
  ordered by filename. then launch jobs in bg to load images, priority
  by visibility in lib
- try gegl raw-load and openraw-load nodes
- reduce db size by kicking out float/mip thumbnail images
- import image: create dummy entry with this filename, create imgid and cache entry.
  - then load image mip on demand, using image_get cache requests.
  - image_import: no dummy entries for mipmaps!
    imageio_preview_write: update/insert into

1.0 roadmap:
- better demosaicing
- quickly template for dt plugins (translatable)

bugs:
 - import while still importing crashes.

feature requests:
 - gphoto2 import (views/acquire)
 - step to next image in darkroom mode (precache:)
 - bzip2 compressed content
 - offline media reference in db
 - clustered image view by similar tag/flag
 - user orient rotation
 - linear/gamma from database for camera models.
 - spot removal brush
 - images of expensive cameras for webpage.
 - libglade => gtkbuilder.

usability:
 - closeup in 3:1 5:1 or 2:1 ?
 - navigation widget for lib?

cache:
 - user profile guided prefetching for full raw load!

build/packaging:
 - doxygen documentation

