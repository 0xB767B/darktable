- remove dt_ctl_image_settings by iop/gamma
- save gui settings (expanded etc?) in operation stacks
- how is gui and imageop synched? when are params committed to
  stack?
- replace dev zoom/closeup weirdness by general scale factor.
- re-think mipmap database layout (even smaller float preview
  to replace other mips?)
- gamma with gegl operations +-/gamma?

bugs:
 - import while still importing crashes.
 - export mono-core?
 - openmp crashes dt (in magick or elsewhere) :(
 - small images mip maps garbled.
 - check mipmap decisions (seem very lo-res)
 - ppm export crashing sometimes?
 - JPEG loading needs shrink + orientation (steal jhead source?)
 - dev switch resolution AFTER setting gui stuff.
   control->width is updated in expose, and configure
   is called in dev_enter. (just before) :(
 - image_load_job should take img id and get it from cache himself!
   (this is a serious problem if not all images fit into cache)
 - strange G_OBJECT cast errors when loading pfm/exr/pdf?
 - import folder file chooser sometimes not sized appropriately
 - histogram updates in fixed pipeline come too early/uselessly?


feature requests:
 - pizza button.
 - some accel key => center and align images at left/right borders for
   given zoom rate
 - import: interrupt, continue, watch dir (all more robust)
 - export:
   - jpg quality
   - load list from sql to dev->GList (be able to alter selection after)
   - progress bar
 - completely free zoom in dev mode (not just 1:1, fit, fill)
 - use GEGL to replace dev cache and operation interface!
   - disable nodes: connect pass-through edge
   - move tonecurve widget to gegl-curve struct and iop interface!
     - first try: gegl:nop
   - database load/save of new history items!
   - apply linear/gamma conversion curve (still fixed widget)
 - flags: deleted, cool, uncool..
 - clustered image view by similar tag/flag
 - user orient rotation
 - tonemapping for hdr?
 - linear/gamma from database for camera models.
 - spot removal brush
 - ufraw style highlight reconstruction
 - images of expensive cameras for webpage.
 - blackpoint
 - gamma: no linear part for some cameras.
 - interpolation as user parameter?
 - set default parameters for all controls in dev mode while in lib mode?
 - clean up db for mem optimizations: keep only image+history, re-import mips.
 - remove dead links in library automatically?
 - GMM for color model using EM in opencv!
 - cache auf platte, echte bilder irgendwo auf dvd/platte extern/kamera chip etc
   - moeglicherweise ECHTE bilder (dias im schrank)
 - bilder sortieren, evtl manuell (mehrere kameras in einen film usw)
 - zoom in in 3 steps?
 - hide gui triangles andere form und switch in/out
 - inotify dir watching
 - execute iop: pass global image window!
 - zoom in dev mode via mouse wheel/click
 - brightness/exposure highlight histogram stuff (fill blacks)
 - LensFun

priority list:
 - aoe, keys to change +-= table_cols/1 resp.
 - top gui with sql statements for lighttable mode ? for dev mode
 - exif tab: exif_table expose event: fill mouse_over_id exif data!
 - tags and some tag search facility (expander in lighttable mode)
 - clean up dev events: add history-> cache up -> fixed pipeline up
 - image properties when zoomed in a lot
 - bottom control panel with buttons for lib->dev->lib
 - libglade => gtkbuilder.

image ops (GEGL):
 - white balance
 - exposure
 - luma/chroma denoising
 - crop

usability:
 - label_widgets on expanders? (zoom buttons, enable switches..)
 - write out image_t at quit (exif, filenames, selected flags)
 - navigation: buttons for zoom levels
 - closeup in 3:1 5:1 or 2:1 ?
 - disable dev controls/make invisible in lib?
 - make directory loading interruptible
 - adjust navigation preview in dev on the fly?
 - image loading: load thumbnails first, if any.
 - navigation widget for lib?
 - curve widget presets
   - x-axis adjusters
 - active live histogram (exposure etc)
 - all functions mouse-accessible
 - library graph with keyword edges.

look:
 - dev img border
 - shadow border between center and outer panels
 - end markers :)
 - dev full res image possibly smaller as lo-res (paint border with bg)

cache:
 - user profile guided prefetching for full raw load!
 - load cache from disk only if md5sum matches

build/packaging:
 - doxygen documentation

