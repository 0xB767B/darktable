0.5 release:
- decapitalize icc profile names
- black images bug...??
- lock zoom/pan checkbox in darkroom mode

later:
- more transparent custom default handling
- built-in XYZ color profile support?
- embed custom exif data in export plugin
- ship color profiles with dt?
- remember visible image/center image for each film and mode
- some `no float buffer available yet' process_to_mip crash at random?
- thumbnail regeneration trigger: expose after image loaded not enough?
- give tag for each film roll during import, make editing easy after
- compare sha1sum in db with image on open.
- whitebalance finetune presets: interpolate if not all in wb_presets.c
- develop bottom panel: color picker:
  - also pick output profile and zone
  - remove before label etc
- redraw problem in basecurve / tonecurve (flat line)
- gimp code: optimized jpeg + gui for export
- custom presets with name
- exposure pipe:
  - implement cool highlight reconstruction with new information above max.
- embedded profiles?
- aspect ratio presets
- save custom defaults (sqlite table iop_defaults) to external file as well
- export override for output path (collection)
- leave corners free (top/bottom scrolling indicators)
- resource conflict: load jobs reimport and dt
  gui develop full buf/mipf buf priority!
  - does dev actually hold a mipf reference?
  - dev enter while still reimporting crashes.
- save current settings as preset
- load only icc profiles which mach current camera and in/out selectively.
- import small pfm: black border in preview?
- color picker dont update?
- export/select by edited/up-to-date exported
- libs/history
  - favorites list (custom styles or so)
- if dir is not found, try known top-levels or ask for new
- darkroom mode plugin template
- mirror horizontal/vertical in crop/rotate, drag crop box, bypass angle==0
- gnome-color-manager dbus interaction
- highlight reconstruction/tonemapping (reinhard 02)
- esc -> unfullscreen -> center
- automatic re-import in raw import on button press?
- auto center/filter to 1 star/filename if new film is loaded
  - or: presets for every film in separate db.
- histogram fill light mouse gesture
- exposure: highlight clipped parts
- user preferences
  - automatic application of history stacks due to pattern matching.
  - gconf option for maximum number of jobs?
  - gconf performance presets (memory/preview subsample)
- scroll to opened expander in darkroom mode.
- views/browse.c: browse by similar tag:
  inner 1:1 lighttable image, border with smaller images with
  related tags, 2*k+2 many.
- browse clusters of images by
  - extract image statistics/compare metric
  - faces (opencv), hist L, hist wtf, hist (a,b)
  - select (random?) representative
- film strip in develop mode to switch to next image.
- artistic vignetting (applied after cropping)
- lighttable side-by-side mode
- color labels, key shortcuts, sorting by color, bg of image in color.
- noise/film grain simulator plugin
- embedded thumbnail as static snapshot
- try gegl 0.1.2
- mac bitch: gegl.h and Carbon.h are not friends.
- exr io
- progress bars for coresponding widgets (export)?
- efficiency:
  - dt_image_expose: check history cached in flags?
  - dt_dev_process_to_mip: check hash?

bugs:
- develop left without mipf loaded => output_width messed up.
- open_raw has img cleaned up before finished during dt_exit

cleanup:
- keep stdout clean! (shut up exiv2 and jpg)
- add some user guide documentation.
- remove all rc = clang errors?
- check all g_list_delete_link 
- remove last few non-gconf settings.
- remove gtk_drawing_area_size()


- copy function in lib:
  - flags, tags
  - histogram :)

1.0 roadmap:
- better demosaicing
- quickly template for dt plugins (translatable)

feature requests:
 - gphoto2 import (views/acquire)
 - bzip2 compressed content
 - offline media reference in db
 - user orient rotation
 - spot removal brush
 - images of expensive cameras for webpage.
 - libglade => gtkbuilder.

usability:
 - closeup in 3:1 5:1 or 2:1 ?
 - navigation widget for lib?

cache:
 - user profile guided prefetching for full raw load!

