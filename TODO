bugs:
- open_raw has img cleaned up before finished during dt_exit
- preview_ldr !
- import memory leak?

0.2 performance:
- parallel iop->processing (seems to be fast enough mono-core)?
- try dt_iop std functions in parallel with openmp?
- openmp libraw?

0.2 cleanup:
- merge develop_view to develop
- remove develop/iop_hsb.*
- remove dt_ctl_image_settings_t
- remove src/gui/curveeditor.*
- width/height in metadata
- timeout for zoom/pan: first one frame preview then full?
  (actually full pixels just redraw even if dirty.. num_req/num_calc?)
- progress bars for image folder import and image export
- develop does not need (object local) gamma anymore
- where to put ungamma table? 
- remove gegl dependency in tonecurve.c completely
- mip0 broken for very lo-res images.
- print GPLv3 notice on top of all files
- save gui settings (expanded etc?) in operation stacks
- tmp robustness: clean up database on exit completely (lru film history)

- release 0.2 :)

image operations:
- better saturation/whitebalance module.

ubuntu package deps:
- libgtk2.0-dev
- libsqlite3-dev
- libglade2-dev
- libmagickcore-dev
- libgegl-0.0-dev
- libcairo2-dev
- libexif-dev
- liblcms1-dev

0.3 roadmap:
- quality parameter for pixelpipe init callbacks in modules?
- if kicking out mip maps from db: need to re-generate history pipeline mipf->mip4!
- replace dev zoom/closeup weirdness by general scale factor.
- libraw document mode and custom whitebalance/color processing.
- new strategy to add images: add empty dia (with icon and filename)
  ordered by filename. then launch jobs in bg to load images, priority
  by visibility in lib
- add/removable modules in module stack (replace fixed stack)
- try gegl raw-load and openraw-load nodes
- reduce db size by kicking out float/mip thumbnail images
- check libraw speed
- insert more gegl:operations and modules
- harden db format
- xml file per image export/import to db
  (dump dt module/hist stack and gegl ops)
- investigate 16-bit compression for raw previews
- re-check image data base import, updates, and storage in db
  imageio_preview_write: update/insert into
  image_import: no dummy entries!

1.0 roadmap:
- image denoising (non-local means?)
- remove libraw in favour of native gegl loading?
- remove imagemagick in favour of native gegl writing?
- ubuntu package
- database for linear/gamma parameters for each camera model

bugs:
 - import while still importing crashes.
 - openmp crashes dt (in magick or elsewhere) :(
 - small images mip maps garbled.
 - check mipmap decisions (seem very lo-res)
 - JPEG loading needs shrink + orientation (steal jhead source?)
 - image_load_job should take img id and get it from cache himself!
   (this is a serious problem if not all images fit into cache)
 - import folder file chooser sometimes not sized appropriately

feature requests:
 - offline media reference in db
 - image variants (different history etc, new image with same source)
 - pizza button.
 - some accel key => center and align images at left/right borders for
   given zoom rate
 - import: interrupt, continue, watch dir (all more robust)
 - export:
   - jpg quality
   - load list from sql to dev->GList (be able to alter selection after)
   - progress bar
 - completely free zoom in dev mode (not just 1:1, fit, fill)
 - flags: deleted, cool, uncool..
 - clustered image view by similar tag/flag
 - user orient rotation
 - tonemapping for hdr?
 - linear/gamma from database for camera models.
 - spot removal brush
 - ufraw style highlight reconstruction
 - images of expensive cameras for webpage.
 - blackpoint
 - ahd interpolation as user parameter?
 - set default parameters for all controls in dev mode while in lib mode?
 - clean up db for mem optimizations: keep only image+history, re-import mips.
 - remove dead links in library automatically?
 - GMM for color model using EM in opencv!
 - cache auf platte, echte bilder irgendwo auf dvd/platte extern/kamera chip etc
   - moeglicherweise ECHTE bilder (dias im schrank)
 - bilder sortieren, evtl manuell (mehrere kameras in einen film usw)
 - animated zoom-in in 3 steps?
 - hide gui triangles andere form und switch in/out
 - inotify dir watching
 - zoom in dev mode via mouse wheel/click
 - brightness/exposure highlight histogram stuff (fill blacks)
 - LensFun

priority list:
 - aoe, keys to change +-= table_cols/1 resp.
 - tags and some tag search facility (expander in lighttable mode)
 - image properties when zoomed in a lot
 - bottom control panel with buttons for lib->dev->lib
 - libglade => gtkbuilder.

image ops (GEGL):
 - white balance
 - exposure
 - luma/chroma denoising
 - crop

usability:
 - label_widgets on expanders? (zoom buttons, enable switches..)
 - write out image_t at quit (exif, filenames, selected flags)
 - navigation: buttons for zoom levels
 - closeup in 3:1 5:1 or 2:1 ?
 - disable dev controls/make invisible in lib?
 - make directory loading interruptible
 - adjust navigation preview in dev on the fly?
 - image loading: load thumbnails first, if any.
 - navigation widget for lib?
 - curve widget presets
   - x-axis adjusters
 - active live histogram (exposure etc)
 - all functions mouse-accessible
 - library graph with keyword edges.

look:
 - shadow border between center and outer panels
 - end markers :)

cache:
 - user profile guided prefetching for full raw load!
 - load cache from disk only if md5sum matches

build/packaging:
 - doxygen documentation
 - debian/ubuntu package

