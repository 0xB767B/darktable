bugs:
- img unlock => flicker in library mode? (due to mipf trigger?)
- can't create export folder=>crash
- check for deleted images when opening a film roll!
- import very slow (hdd lock with gui??) on nfs homes
- import starts 3 threads but seems to be mono-core?
- check if there is a mem leak in jpg decompress.
- open_raw has img cleaned up before finished during dt_exit
- zoom to wrong image bug: resize window helps (???)
- glist instead of sql query in export (or else altering selection after pressing export will change the behavior)

cleanup:
- sequentially work on preview/full?
- libraw autoexposure etc off?
- ahd,wb,autoexp,color_matrix in dt (use document mode proc)
- keep stdout clean! (shut up exiv2 and jpg)
- sorted image loading (on import)!
- add some user guide documentation.
- merge develop_view to develop
- progress bars for image folder import and image export
- develop does not need (object local) gamma anymore
- where to put ungamma table? 
- remove gegl dependency in tonecurve.c completely
- mip0 broken for very lo-res images.
- print GPLv3 notice on top of all files
- save gui settings (expanded etc?) in operation stacks

0.3 roadmap:
- finish most develop (single film roll) functionality:
- plug-in loading system as rc.d
  - need plug-in versioning
- post-gamma crop/rotate plug-in:
  - need mouse interface and draw hook
  - draw 3x3 lines or similar
  - move image around in crop window with darkened borders?
- editable metadata (at least what's needed for lensfun..)
- copy function in lib:
  - flags, tags
  - history stack
  - histogram :)
- write/re-import small xml file for images to backup sql
- translations (de, etc)
- small 1:1 preview for sharpen etc.
- write back images to db after cache drop!
- lensfun
- try gegl 0.1.0
- darkroom mode: click on 1:1 zoom spot
- quality parameter for pixelpipe init callbacks in modules?
- if kicking out mip maps from db: need to re-generate history pipeline mipf->mip4!
- replace dev zoom/closeup weirdness by general scale factor.
- libraw document mode and custom whitebalance/color processing.
- new strategy to add images: add empty dia (with icon and filename)
  ordered by filename. then launch jobs in bg to load images, priority
  by visibility in lib
- add/removable modules in module stack (replace fixed stack)
- try gegl raw-load and openraw-load nodes
- reduce db size by kicking out float/mip thumbnail images
- check libraw speed
- insert more gegl:operations and modules
- harden db format
- import image: create dummy entry with this filename, create imgid and cache entry.
  - then load image mip on demand, using image_get cache requests.
  - image_import: no dummy entries for mipmaps!
    imageio_preview_write: update/insert into

1.0 roadmap:
- remove libraw in favour of native gegl loading?
- database for linear/gamma parameters for each camera model

bugs:
 - import while still importing crashes.
 - check mipmap decisions (seem very lo-res)
 - image_load_job should take img id and get it from cache himself!
   (this is a serious problem if not all images fit into cache)
 - import folder file chooser sometimes not sized appropriately

feature requests:
 - physically delete raw from disk (selected)
 - gphoto2 import.
 - step to next image in darkroom mode (precache:)
 - rescale during export (email etc)
 - reset button for iops
 - bzip2 compressed content
 - offline media reference in db
 - image variants (different history etc, new image with same source)
 - pizza button.
 - some accel key => center and align images at left/right borders for
   given zoom rate
 - import: interrupt, continue, watch dir (all more robust)
 - clustered image view by similar tag/flag
 - user orient rotation
 - tonemapping for hdr?
 - linear/gamma from database for camera models.
 - spot removal brush
 - ufraw style highlight reconstruction
 - images of expensive cameras for webpage.
 - ahd interpolation as user parameter?
 - set default parameters for all controls in dev mode while in lib mode?
 - clean up db for mem optimizations: keep only image+history, re-import mips.
 - remove dead links in library automatically?
 - cache auf platte, echte bilder irgendwo auf dvd/platte extern/kamera chip etc
   - moeglicherweise ECHTE bilder (dias im schrank)
 - bilder sortieren, evtl manuell (mehrere kameras in einen film usw)
 - animated zoom-in in 3 steps?
 - hide gui triangles andere form und switch in/out
 - inotify dir watching
 - zoom in dev mode via mouse wheel/click
 - brightness/exposure highlight histogram stuff (fill blacks)
 - LensFun

priority list:
 - tags and some tag search facility (expander in lighttable mode)
 - image properties when zoomed in a lot
 - bottom control panel with buttons for lib->dev->lib
 - libglade => gtkbuilder.

usability:
 - label_widgets on expanders? (zoom buttons, enable switches..)
 - write out image_t at quit (exif, filenames, selected flags)
 - navigation: buttons for zoom levels
 - closeup in 3:1 5:1 or 2:1 ?
 - disable dev controls/make invisible in lib?
 - make directory loading interruptible
 - adjust navigation preview in dev on the fly?
 - navigation widget for lib?
 - curve widget presets
   - x-axis adjusters
 - active live histogram (exposure etc)
 - all functions mouse-accessible
 - library graph with keyword edges.

look:
 - end markers :)

cache:
 - user profile guided prefetching for full raw load!

build/packaging:
 - doxygen documentation

