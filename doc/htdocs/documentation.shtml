<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="Content-type" content="text/html;charset=UTF-8" />
    <link rel="shortcut icon" href="favicon.ico" />
    <link rel="stylesheet" href="style/style.css" type="text/css" /> 
    <title>documentation | darktable</title>
  </head>
  <body style="counter-reset: chapter; counter-increment: chapter 5;"> <!-- chapter number goes here! -->
    <div class="page">
      <!--#include virtual="navigation.html" -->
    	<span class="number"><img src="style/5.png" alt="5" width="142px" /></span><div class="headline"><img src="documentation.png" alt="documentation" width="324px"/></div>
    	<div class="starterText">
      on this page, there are a few demonstrations of darktable's tools, as well as hack-level tricks.
      </div>

      <div class="headingtext"><h1>monochrome tool: convert an image to black and white</h1>
      this section briefly shows how to convert an image to black and white using the <em>monochrome</em> tool in darktable.
      </div>
      <div class="text">
    	<a href="images/monochrome_original.jpg"><img src="images/monochrome_original_small.jpg" class="bigimg" alt="dreggn" /></a>
      this is the original color image.
      </div>
      <div class="text">
    	<a href="images/monochrome_bw.jpg"><img src="images/monochrome_bw_small.jpg" class="bigimg" alt="dreggn" /></a>
      this image has been modified with a red color filter applied before conversion. effectively,
      the blue sky gets attenuated, resulting in high-contrast and very plastic clouds. use the mouse wheel or the slider to adjust
      the bandwidth of the filter.
      </div>
      <div class="text">
    	<a href="images/monochrome_skin_green.jpg"><img src="images/monochrome_skin_green_small.jpg" class="bigimg" alt="dreggn" /></a>
      this example shows the impact of color filters on skin tones and detail. the green filter used here enhances skin details such as
      freckles.
      </div>
      <div class="text">
    	<a href="images/monochrome_skin_red.jpg"><img src="images/monochrome_skin_red_small.jpg" class="bigimg" alt="dreggn" /></a>
      adjusting the filter more towards red tones results in smoother appearance.
      the sepia toning is achieved by an offset in the <em>color correction</em> tool.
      </div>

      <div class="headingtext"><h1>equalizer tool: detail smoothing/enhancement</h1>
      only a small doc about the new <em>equalizer</em> tool, as it is a bit exotic. you can use it to smooth your images
      in an edge-aware way (similar to a bilateral filter, but a lot faster), do this on the color channels (i.e. remove high iso sensor noise),
      or do the inverse and selectively accentuate a particular frequency range (enhance detail, sharpen). algorithmically, it is based on
      <em>edge-avoiding wavelets</em>.
    	</div>
      <div class="text">
    	<a href="images/eaw_original.jpg"><img src="images/eaw_original_small.jpg" class="bigimg" alt="dreggn" /></a>
      this is the original image, the button with <em>original</em> on it (in the history expander) has just been pressed. so the equalizer tool is
      switched off and all curves are a straight line const = 1. left are the lowest frequencies (big holes), right are the highest (tiny holds).
      the curve gives the number with which the frequency band is multiplied. lower half (smaller than one) attenuates, upper half will increase
      the value. the histogram in the back indicates the mean power for the given band in the current view of the image and the currently
      selected color channel.
    	</div>
      <div class="text">
    	<a href="images/eaw_smooth.jpg"><img src="images/eaw_smooth_small.jpg" class="bigimg" alt="dreggn" /></a>
      to enhance the climbing skills, you could make some holds disappear by pulling down the luminance curve (Y). you can
      increase/decrease the area of influence of your pointer (indicated by the circle) using the mouse wheel, similar to
      blenders proportional edit.</br>
      note how the sharp edges (arm, leg) are preserved.
      </div>
      <div class="text">
    	<a href="images/eaw_sharpen.jpg"><img src="images/eaw_sharpen_small.jpg" class="bigimg" alt="dreggn" /></a>
      contrary, it might look better if the rock had a sharper, high-contrast look. to accentuate holds of a certain size,
      pull up the Y-curve over the middle at a certain position.
      </div>
      <div class="text">
      still this is really just a programmer's example, suggestions welcome.
      </div>

      <div class="text">
    	<h1>keyboard shortcuts</h1>
      <em>common</em>
      <ul>
        <li>f11 -- [un]fullscreen</li>
        <li>tab -- show/hide side panels</li>
        <li>e  -- change mode (lighttable to darkroom and back)</li>
      </ul>
      <em>lighttable mode</em>
      <ul>
        <li>1 -- zoom in on image under cursor</li>
        <li>q -- zoom out to fit all images in one row inside viewport, center on image under cursor</li>
        <li>a, s, d, w -- move around</li>
      </ul>
      <em>darkroom mode</em>
      <ul>
        <li>1, 2, 3 -- zoom to 1:1, fill, and fit, respectively</li>
      </ul>
      <em>hint for dvorak etc users</em>
      <p>the keys are chosen by location on the qwerty layout, not by label.</p>
    	</div>


      <div class="text">
    	<h1>speed hack</h1>
      <ul>
        <li> $ cp ~/.darktabledb /dev/shm</li>
        <li> $ echo -n "/dev/shm/.darktabledb" &gt; ~/.darktablerc</li>
        <li> $ darktable</li>
        <li> $ cp /dev/shm/.darktabledb ~/</li>
        <li> :)</li>
      </ul>
    	</div>

      <div class="text">
    	<h1>size hack</h1>
      <ul>
        <li> $ sqlite3 ~/.darktabledb</li>
        <li> &gt; delete from mipmaps;</li>
        <li> &gt; delete from mipmap_timestamps;</li>
        <li> &gt; vacuum;</li>
        <li> darktable will re-generate cached mipmaps in db on demand.</li>
      </ul>
    	</div>


    </div> <!-- page -->
    <!--#include virtual="footer.html" -->
  </body>
</html>
