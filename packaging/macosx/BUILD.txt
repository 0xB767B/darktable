How to make disk image with darktable application bundle (64 bit Intel only):

1). Build darktable (and make sure it works) using instructions found in this blog post:
    http://www.darktable.org/2012/08/bringing-current-darktable-to-os-x/

2). Download, patch and install gtk-mac-bundler (assuming darktable was cloned into ~/src directory):
    $ cd ~/src
    $ wget http://ftp.gnome.org/pub/gnome/sources/gtk-mac-bundler/0.6/gtk-mac-bundler-0.6.1.tar.bz2
    $ tar -xf gtk-mac-bundler-0.6.1.tar.bz2
    $ cd gtk-mac-bundler-0.6.1
    $ patch -p1 < ../darktable/packaging/macosx/gtk-mac-bundler-0.6.1.patch
    $ make install

3). Try running bundle creating script:
    $ cd ~/src/darktable/packaging/macosx
    $ ./make-app-bundle
    Most likely there will be error messages about install_name_tool being unable to update some libraries due to lack of space in header.
    You will need to rebuild these libraries with custom LDFLAGS. To do that copy Portfiles (and files directory if present) to your local macports repository.
    Then add this line to Portfile:
    configure.ldflags-append -Wl,-headerpad_max_install_names
    Update index file with portindex command and reinstall (sudo port -f uninstall + sudo port install) these packages.
    (This step probably can be simplified by changing some macports config file, need to investigate.)

4). You will need to rebuild gtk2 with custom configure flag too. Copy gtk2 Portfile to local repository (if you haven't already done that) and add this line:
    configure.args-append --enable-quartz-relocation
    The problem is that with this flag gtk2 works reliably only when included in bundle, so if you need working system gtk2 you will need to revert this change
    after you're done with bundle creation. This can be simplified if you place above line in new variant, so you can just run "port activate" when necessary. 

5). Now preparation is done, run image creating script as described in step 3, it should create darktable.dmg in current (packaging/macosx) directory.
